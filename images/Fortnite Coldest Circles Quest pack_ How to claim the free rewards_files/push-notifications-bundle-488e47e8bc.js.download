var KeedaPushNotificationsManagerInstance=function(){window.APP_METADATA;var e="root"in window.APP_METADATA?window.APP_METADATA.root:window.APP_METADATA,n=GOTHAM_URL_HA_FRONTEND+"/push-notifications/web/subscribe",s=GOTHAM_URL_HA_FRONTEND+"/push-notifications/web/unsubscribe",r=GOTHAM_URL_HA_FRONTEND+"/push-notifications/web/subscription/topics",a=GOTHAM_URL_HA_FRONTEND+"/push-notifications/send",i="default",t="granted",o="denied",c={Tournament:"tournament",Match:"match",Team:"team",Info:"info",Comment:"comment",FortniteItemShop:"fortnite_item_shop"},f={ManualNotifications:"manual_notifications",TossAndMatchUpdates:"toss_and_match",WicketsAndMilestoneUpdates:"wickets_and_milestones",Every5OverUpdates:"score_every_5_overs",FantasyTipsUpdates:"fantasy_tips",CommentEngagement:"comment_engagement",FortniteShopUpdates:"fortnite_shop_update",PredictionUpdates:"prediction_updates"},u=PUSH_NOTIFICATIONS_TOPIC_VERSION||"v0000",p=window.FIREBASE_CONFIG;function d(){var i;this.notificationBadge=e.assets.badge,this.notificationIcon=e.assets.icon+"?w=128",this.ObjectType=c,this.Topic=f,this.TopicAlias=((i={})[f.ManualNotifications]="manual_notifications",i[f.TossAndMatchUpdates]="toss_updates",i[f.WicketsAndMilestoneUpdates]="wickets_updates",i[f.Every5OverUpdates]="score_updates",i[f.FantasyTipsUpdates]="fantasy_tips_updates",i),this.isReady=!1,this.initializationPromise=null,this.firebaseConfig={apiKey:p.apiKey,authDomain:p.authDomain,projectId:p.projectId,storageBucket:p.storageBucket,messagingSenderId:p.messagingSenderId,appId:p.appId,measurementId:p.measurementId},this.vapidKey=p.vapidKey,this.firebaseMessaging=null,this.serviceWorkerRegistration=null,this.notificationPermission="",this.notificationPermissionGranted=!1,this.notificationSubscribers=[],this.notificationDefaultHandlers={},this.onDefaultNotificationHandlerCallback=null,this.subscribedTopics=[]}return d.prototype.initializeFirebase=function(){var i=this;return asyncScriptLoader({src:"https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js",loadWithAsync:!0}).then(function(){return asyncScriptLoader({src:"https://www.gstatic.com/firebasejs/8.10.0/firebase-messaging.js",loadWithAsync:!0})}).then(function(){if(!firebase)throw new"Firebase is not supported in this browser!";if(firebase.initializeApp(i.firebaseConfig),!firebase.messaging||!firebase.messaging.isSupported())throw new"Firebase messaging is not supported in this browser!";i.firebaseMessaging=firebase.messaging()})},d.prototype.initialize=function(i){var e=this;return e.initializationPromise||(e.isReady?resolve(!0):(i&&(e.serviceWorkerRegistration=i),e.initializationPromise=e.initializeFirebase().then(function(){return e.firebaseMessaging.usePublicVapidKey(e.vapidKey),e.serviceWorkerRegistration&&e.firebaseMessaging.useServiceWorker(e.serviceWorkerRegistration),e.attachForegroundNotificationHandler(),e.notificationPermission=String(Notification.permission).toLowerCase(),!0})))},d.prototype.nowReady=function(){this.isReady=!0},d.prototype.onceReady=function(){var i=this;return new Promise(function(e,t){var o=0;function n(i){return i.isReady?e():80<o++?t("Could not initialize Firebase in 2 minutes"):void setTimeout(n.bind(null,i),1500)}n(i)})},d.prototype.requestPermission=function(){var i=this;return this.ensureFirebaseMessagingIsAvailable(),this.firebaseMessaging.requestPermission().then(function(){i.notificationPermissionGranted=!0},function(){i.notificationPermissionGranted=!1})},d.prototype.isNotificationPermissionAllowed=function(){return String(Notification.permission).toLowerCase()===t},d.prototype.didUserAllowNotifications=function(){return this.notificationPermission===i&&String(Notification.permission).toLowerCase()===t},d.prototype.didUserBlockNotifications=function(){return this.notificationPermission===i&&String(Notification.permission).toLowerCase()===o},d.prototype.getToken=function(){return this.ensureFirebaseMessagingIsAvailable(),this.ensureServiceWorkerIsRegistered(),this.firebaseMessaging.getToken().then(function(i){return i},function(){return console.info("Notifications permissions are not granted! Firebase token cannot be generated."),""})},d.prototype.onTokenRefresh=function(i){return this.ensureFirebaseMessagingIsAvailable(),this.ensureServiceWorkerIsRegistered(),this.firebaseMessaging.onTokenRefresh(i)},d.prototype.subscribeForNotifications=function(i){i&&"function"==typeof i&&this.notificationSubscribers.push(i)},d.prototype.attachForegroundNotificationHandler=function(){var e=this;this.firebaseMessaging.onMessage(function(i){console.info("Received push notification when app was in foreground ",i),e.broadcastNotification(i)})},d.prototype.broadcastNotification=function(e){console.info("Received a push notification for Web. Broadcasting the same!");var i,t=!1;{if(this.notificationSubscribers.forEach(function(i){i=i(e);!t&&i&&(t=!0)}),!t)return i=e.data&&e.data.target,(i=this.notificationDefaultHandlers[i])?(console.info("Found a suitable handler for notification!"),void i.showNotification(e)):void this.showNotificationDefaultHandler(e);console.info("Notification was acknowledged by a subscriber!")}},d.prototype.setDefaultNotificationHandlerCallback=function(i){"function"==typeof i&&(this.onDefaultNotificationHandlerCallback=i)},d.prototype.showNotificationDefaultHandler=function(i){console.info("Using default handler for notification!"),this.showNotification(i,{}),"function"==typeof this.onDefaultNotificationHandlerCallback&&this.onDefaultNotificationHandlerCallback()},d.prototype.showNotification=function(i,e){this.ensureServiceWorkerIsRegistered();var i=i.data,t=(e=e||{}).title||i.title,e=e.options||{},i={body:i.body,image:i.imageURL,tag:i.tag,badge:this.notificationBadge,icon:this.notificationIcon,data:i},e=Object.assign({},i,e);this.serviceWorkerRegistration.showNotification(t,e)},d.prototype.addNotificationHandler=function(i,e){String(i).length&&e&&"showNotification"in e&&(this.notificationDefaultHandlers[i]=e)},d.prototype.subscribeToTopics=function(t,o){return t?o.length?(this.ensureFirebaseMessagingIsAvailable(),new Promise(function(i,e){pureJSAjaxPost(n,{userToken:t,topics:o},i,e,null,!0)})):Promise.resolve("Empty topics to subscribe"):Promise.reject("Empty token for subscription")},d.prototype.unsubscribeFromTopics=function(t,o){return t?o.length?(this.ensureFirebaseMessagingIsAvailable(),new Promise(function(i,e){pureJSAjaxPost(s,{userToken:t,topics:o},i,e,null,!0)})):Promise.resolve("Empty topics to unsubscribe"):Promise.reject("Empty token for subscription")},d.prototype.getSubscribedTopics=function(e,i){var o=this;return e?this.subscribedTopics.length&&!i?Promise.resolve(this.subscribedTopics):new Promise(function(t,i){pureJSAjaxPost(r,{userToken:e},function(i){try{var e=JSON.parse(i);return e.topics&&Array.isArray(e.topics)&&(o.subscribedTopics=e.topics),t(o.subscribedTopics)}catch(i){console.info("Error while fetching subscribed topics ",i)}},i,null,!0)}):Promise.reject("Empty token for subscriptions")},d.prototype.sendManualNotification=function(i){var e=i.title;if(!e)return Promise.reject("Empty title for notification");var t=i.body;if(!t)return Promise.reject("Empty body for notification");var o=i.url;if(!o)return Promise.reject("Empty url for notification");var n=i.condition;if(!n)return Promise.reject("Empty condition for notification");var s=i.platforms;if(!s||!Array.isArray(s))return Promise.reject("Invalid platforms notification");if(!s.length)return Promise.reject("Empty platforms for notification");var r={title:e,body:t,url:o,condition:n,platforms:s};return i.imageURL&&(r.imageURL=i.imageURL),new Promise(function(i,e){pureJSAjaxPost(a,r,i,e,null,!0)})},d.prototype.ensureFirebaseMessagingIsAvailable=function(){if(!this.firebaseMessaging)throw new Error("Firebase messaging is not yet initialized!")},d.prototype.ensureServiceWorkerIsRegistered=function(){if(!this.serviceWorkerRegistration)throw new Error("Service worker is not registered!")},d.prototype.generateTopic=function(i,e,t){return[[u,i,t].join("-"),e].join("--")},d.prototype.getImplicitTopicsToSubscribe=function(i){return[]},d.prototype.subscribeToDefaultTopics=function(e){var t=this;return KeedaPushNotificationsManagerInstance.getToken().then(function(i){return t.subscribeToTopics(i,t.getImplicitTopicsToSubscribe(e))})},new d}();